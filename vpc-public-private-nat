---
AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a two-subnet VPC (public w/ NAT gateway and private) (c) 2017
  Air11 Technology LLC -- licensed under the Apache OpenSource 2.0 license, https://opensource.org/licenses/Apache-2.0
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC configuration parameters
      Parameters:
      - VPCCIDR
      - PublicSubnet1CIDR
      - PublicSubnet2CIDR
      - PrivateSubnet1CIDR
      - PrivateSubnet2CIDR
      - SSHLocation
    ParameterLabels:
      VPCCIDR:
        default: Enter CIDR of new VPC
      PublicSubnet1CIDR:
        default: Enter CIDR of the public1 subnet
      PublicSubnet2CIDR:
        default: Enter CIDR of the public2 subnet
      PrivateSubnet1CIDR:
        default: Enter CIDR of the private1 subnet
      PrivateSubnet2CIDR:
        default: Enter CIDR of the private2 subnet
      SSHLocation:
        default: Subnet allowed to ssh on TCP to public subnet
Parameters:
  VPCCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for entire VPC.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.1.0/24
    Description: CIDR block for the public1 subnet
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.2.0/24
    Description: CIDR block for the public2 subnet
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.10.0/24
    Description: CIDR block for the private1 subnet
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.20.0/24
    Description: CIDR block for the public2 subnet
    Type: String
  SSHLocation:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-28
    Default: 0.0.0.0/0
    Description: Network allowed to ssh to instances in public subnet.
    Type: String
Mappings: {}
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Ref: VPCCIDR
      Tags:
      - Key: Name
        Value: Anji
      - Key: CloudFormationStack
        Value:
          Ref: AWS::StackId
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: IGW
      - Key: CloudFormationStack
        Value:
          Ref: AWS::StackId
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ap-south-1a
      CidrBlock:
        Ref: PublicSubnet1CIDR
      Tags:
      - Key: Name
        Value: public-subnet1
      - Key: CloudFormationStack
        Value: 
          Ref: AWS::StackId
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ap-south-1b
      CidrBlock:
        Ref: PublicSubnet2CIDR
      Tags:
      - Key: Name
        Value: public-subnet2
      - Key: CloudFormationStack
        Value: 
          Ref: AWS::StackId
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ap-south-1a
      CidrBlock:
        Ref: PrivateSubnet1CIDR
      Tags:
      - Key: Name
        Value: private-subnet1
      - Key: CloudFormationStack
        Value: 
          Ref: AWS::StackId
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ap-south-1b
      CidrBlock:
        Ref: PrivateSubnet2CIDR
      Tags:
      - Key: Name
        Value: private-subnet2
      - Key: CloudFormationStack
        Value: 
          Ref: AWS::StackId
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: 
        Ref: VPC
      Tags:
        - Key: Name
          Value: public-route
        - Key: CloudFormationStack
          Value: 
            Ref: 'AWS::StackId'
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicSubnetRouteTable
  NATGatewayEIP:
   Type: AWS::EC2::EIP
   Properties:
      Domain: vpc
  NATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: stack
        Value: production
  RouteNATGateway:
   DependsOn: NATGateway
   Type: AWS::EC2::Route
   Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway    
  PrivateSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: 
        Ref: VPC
      Tags:
        - Key: Name
          Value: private-route
        - Key: CloudFormationStack
          Value: 
            Ref: 'AWS::StackId'
  PriavteSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateSubnetRouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateSubnetRouteTable          
  PublicInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: security-vpc
      - Key: CloudFormationStack
        Value:
          Ref: AWS::StackId

